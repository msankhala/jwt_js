<?php

/**
 * @file
 * Get jwt on signin.
 */

use Drupal\user\UserInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Asset\AttachedAssetsInterface;

/**
 * Implements hook_help().
 */
function jwt_js_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.jwt_js':
      return t('
        <h2>Instructions</h2>
        <p>This module requires no configuration... <strong>Just install the module to use it!</strong></p>
      ');
  }
}

/**
 * Implements hook_js_settings_alter().
 */
function jwt_js_js_settings_alter(array &$settings, AttachedAssetsInterface $assets) {
  // Add settings.
  $tempstore = \Drupal::service('tempstore.private')->get('jwt_js');
  $settings['user']['access_token'] = $tempstore->get('jwt_access_token');
}

/**
 * Implements hook_page_attachments().
 */
function jwt_js_page_attachments(&$page) {
  $page['#attached']['library'][] = 'jwt_js/jwt-js';
}

/**
 * Implements hook_user_logout().
 */
function jwt_js_user_logout() {
  $tempstore = \Drupal::service('tempstore.private')->get('jwt_js');
  try {
    $tempstore->delete('jwt_access_token');
  }
  catch (\Exception $error) {
    \Drupal::logger('JWT_error')->notice($error);
  }
}

/**
 * Implements hook_user_login().
 */
function jwt_js_user_login(UserInterface $account) {
  // Generate the jwt token on user login with the help of
  // users_jwt.authentication.jwt service and store in private tempstore.
  try {
    $jwt_token = \Drupal::service('jwt.authentication.jwt')->generateToken();
  }
  catch (\Exception $error) {
    \Drupal::logger('JWT_error')->notice($error);
  }
  $tempstore = \Drupal::service('tempstore.private')->get('jwt_js');
  $tempstore->set('jwt_access_token', $jwt_token);
}
